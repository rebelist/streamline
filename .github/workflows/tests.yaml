name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  check-diff:
    runs-on: ubuntu-latest
    outputs:
      run-tests: ${{ steps.filter.outputs.run-tests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 20

      - name: Check for changes in src/ or tests/
        id: filter
        run: |
          git fetch --no-tags --depth=1 origin main
          BASE=$(git merge-base HEAD FETCH_HEAD)
          CHANGED=$(git diff --name-only $BASE HEAD -- 'src/**' 'tests/**' | wc -l)
          echo "Detected $CHANGED relevant changed files"
          if [ "$CHANGED" -gt 0 ]; then
            echo "run-tests=true" >> $GITHUB_OUTPUT
          else
            echo "run-tests=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for changes in src/ or tests/
        id: filter
        run: |
          git fetch --no-tags --depth=1 origin main
          BASE=$(git merge-base HEAD FETCH_HEAD)
          CHANGED=$(git diff --name-only $BASE HEAD -- 'src/**' 'tests/**' | wc -l)
          if [ "$CHANGED" -gt 0 ]; then
            echo "run-tests=true" >> $GITHUB_OUTPUT
          else
            echo "run-tests=false" >> $GITHUB_OUTPUT
          fi

  test:
    needs: check-diff
    if: needs.check-diff.outputs.run-tests == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: |
          uv venv
          uv sync --dev

      - name: Copy example config files if missing
        run: |
          cp -n .env.example .env || true
          cp -n settings.ini.example settings.ini || true

      - name: Run tests with coverage
        run: |
          uv run pytest --color=yes --cov=streamline --no-cov-on-fail --cov-report xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}