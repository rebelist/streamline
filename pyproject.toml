[project]
name = "rebelist-streamline"
version = "0.1.0"
description = "A free and open-source platform for collecting, visualizing, and analyzing engineering metrics, allowing teams to track performance, improve processes, and make data-driven decisions."
authors = [
    { name = "Fran", email = "engineering.lamadrid@icloud.com" }
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "poetry (>=2.0.1,<3.0.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "loguru (>=0.7.3,<0.8.0)",
    "fastapi (>=0.115.7,<0.116.0)",
    "nicegui (>=2.10.1,<3.0.0)",
    "fastapi-cli (>=0.0.7,<0.0.8)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

### poetry ###

[tool.poetry]
packages = [{ include = "streamline", from = "src" }]
package-mode = false

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pyright = "^1.1.392.post0"
ruff = "^0.9.3"
coverage = "^7.6.10"
pre-commit = "^4.1.0"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.9"

### pyright ###

[tool.pyright]
include = ["src", "tests"]
typeCheckingMode = "strict"
exclude = [
    "**/__pycache__"
]

### ruff ###

[tool.ruff]
line-length = 120

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.ruff.lint]
select = [
    "A", # Aesthetic rules (e.g., blank lines, comment formatting)
    "E", # Errors (e.g., syntax errors, indentation issues)
    "W", # Warnings (e.g., line length, trailing whitespace)
    "F", # Pyflakes (e.g., unused imports, undefined variables)
    "I", # Import rules (e.g., import order, unused imports)
    "B", # Bugbear (e.g., potential bugs, mutable default arguments)
    "C4", # McCabe complexity (e.g., function complexity)
    "N", # Naming conventions (e.g., PEP8 naming standards)
    "D", # Docstrings (e.g., missing docstrings, formatting issues)
    "RUF100", # Mistakes (e.g., common mistakes or poor patterns)
]
ignore = [
    "ANN", # Disable all type annotation-related checks
    "PYI", # Disable checks for .pyi stub files
    "PLR", # Disable Pylint rules related to typing
]

[tool.ruff.lint.pydocstyle]
convention = "google"

